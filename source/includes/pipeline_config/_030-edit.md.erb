## Edit pipeline config

```shell
$ curl 'https://ci.example.com/go/api/admin/pipelines/my_pipeline' \
      -u 'username:password' \
      -H 'Accept: <%= data.apis.versions.pipeline %>' \
      -H 'Content-Type: application/json' \
      -H 'If-Match: "e064ca0fe5d8a39602e19666454b8d77"' \
      -X PUT \
      -d '{
            "label_template": "${COUNT}",
            "enable_pipeline_locking": true,
            "name": "my_pipeline",
            "template": null,
            "materials": [
              {
                "type": "git",
                "attributes": {
                  "url": "git@github.com:sample_repo/example.git",
                  "destination": "destination1",
                  "filter": null,
                  "invert_filter": false,
                  "name": null,
                  "auto_update": true,
                  "branch": "master",
                  "submodule_folder": null,
                  "shallow_clone": true
                }
              }
            ],
            "stages": [
              {
                "name": "defaultStage",
                "fetch_materials": true,
                "clean_working_directory": false,
                "never_cleanup_artifacts": false,
                "approval": {
                  "type": "success",
                  "authorization": {
                    "roles": [],
                    "users": []
                  }
                },
                "environment_variables": [],
                "jobs": [
                  {
                    "name": "defaultJob",
                    "run_instance_count": null,
                    "timeout": 0,
                    "environment_variables": [],
                    "resources": [],
                    "tasks": [
                      {
                        "type": "exec",
                        "attributes": {
                          "run_if": [
                            "passed"
                          ],
                          "command": "ls",
                          "working_directory": null
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          }'
```

> The above command returns JSON structured like this:

```http
HTTP/1.1 200 OK
Content-Type: <%= data.apis.versions.pipeline %>; charset=utf-8
ETag: "e89135b38ddbcd9380c83eb524647bdd"
```

```json
{
  "_links": {
    "self": {
      "href": "https://ci.example.com/go/api/admin/pipelines/my_pipeline"
    },
    "doc": {
      "href": "https://api.gocd.io/#pipeline-config"
    },
    "find": {
      "href": "https://ci.example.com/go/api/admin/pipelines/:name"
    }
  },
  "label_template": "${COUNT}",
  "enable_pipeline_locking": true,
  "name": "my_pipeline",
  "template": null,
  "params": [],
  "environment_variables": [],
  "materials": [
    {
      "type": "git",
      "attributes": {
        "url": "git@github.com:sample_repo/example.git",
        "destination": "destination1",
        "filter": null,
        "invert_filter": false,
        "name": null,
        "auto_update": true,
        "branch": "master",
        "submodule_folder": null,
        "shallow_clone": true
      }
    }
  ],
  "stages": [
    {
      "name": "defaultStage",
      "fetch_materials": true,
      "clean_working_directory": false,
      "never_cleanup_artifacts": false,
      "approval": {
        "type": "success",
        "authorization": {
          "roles": [],
          "users": []
        }
      },
      "environment_variables": [],
      "jobs": [
        {
          "name": "defaultJob",
          "run_instance_count": null,
          "timeout": 0,
          "environment_variables": [],
          "resources": [],
          "tasks": [
            {
              "type": "exec",
              "attributes": {
                "run_if": [
                  "passed"
                ],
                "command": "ls",
                "working_directory": null
              }
            }
          ],
          "tabs": [],
          "artifacts": [],
          "properties": null
        }
      ]
    }
  ],
  "tracking_tool": null,
  "timer": null
}
```

Update pipeline config for specified pipeline name.

<aside class="notice">
  <strong>Note:</strong>
  The update pipeline API requires that you submit the <code>If-Match</code>
  header with the latest ETag value that is representative of the current
  pipeline config resource.
  <br/><br/>
  This is required in order to avoid the "lost update" problem, where a client
  `GET`s a resource's state, modifies it and `PUT`s it back to the server, while
  another user has modified the state of the pipeline config, leading to a
  conflict.
</aside>

<%= available_since('15.3.0') %>

<p class='http-request-heading'>HTTP Request</p>

`PUT /go/api/admin/pipelines/:pipeline_name`

<p class='http-request-return-description'>Returns</p>

The updated [pipeline config object](#the-pipeline-config-object).
