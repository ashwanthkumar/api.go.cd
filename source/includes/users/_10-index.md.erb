## Get all users

```shell
$ curl 'https://ci.example.com/go/api/users' \
      -u 'username:password' \
      -H 'Accept: <%= data.apis.versions.users %>'
```

> The above command returns JSON structured like this:

```http
HTTP/1.1 200 OK
Content-Type: <%= data.apis.versions.users %>; charset=utf-8
```

```json
{
  "_links": {
    "self": {
      "href": "https://ci.example.com/go/api/users"
    },
    "doc": {
      "href": "https://api.gocd.io/#users"
    }
  },
  "_embedded": {
    "users": [
      {
        "_links": {
          "doc": {
            "href": "https://api.gocd.io/#users"
          },
          "self": {
            "href": "https://ci.example.com/go/api/users/admin"
          },
          "find": {
            "href": "https://ci.example.com/go/api/users/:login_name"
          }
        },
        "login_name": "jdoe",
        "display_name": "John Doe",
        "enabled": true,
        "email": null,
        "email_me": false,
        "checkin_aliases": [
          "jdoe",
          "johndoe"
        ]
      }
    ]
  }
}
```

Lists all available users.

<%= available_since('15.2.0') %>

<p class='http-request-heading'>HTTP Request</p>

`GET /go/api/users`

<p class='http-request-return-description'>Returns</p>

An array of [user objects](#the-user-object).
